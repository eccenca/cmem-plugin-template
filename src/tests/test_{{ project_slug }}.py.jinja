"""Plugin tests."""
from cmem_plugin_base.dataintegration.context import ExecutionContext, ExecutionReport

from cmem_plugin_{{ project_slug }}.workflow import DollyPlugin
from cmem_plugin_{{ project_slug }}.transform import Lifetime
from tests.utils import TestExecutionContext


def test_execution():
    """Test plugin execution"""
    entities = 100
    values = 10

    plugin = DollyPlugin(number_of_entities=entities, number_of_values=values)
    result = plugin.execute(
        inputs=(),
        context=TestExecutionContext()
    )
    for item in result.entities:
        assert len(item.values) == len(result.schema.paths)

def test_execution_with_optional_input():
    """Test Lifetime with optional input"""
    result = Lifetime(start_date='2000-05-22').transform(inputs=[])
    for item in result:
        assert item == '22'


def test_execution_with_inputs():
    """Test Lifetime with sequence of inputs"""
    result = Lifetime(start_date='').transform(inputs=[['2000-05-22', '2021-12-12', '1904-02-29']])
    assert result == ['22', '0', '118']


def test_execution_with_zero_inputs():
    """Test Lifetime without inputs"""
    result = Lifetime(start_date='').transform(inputs=[])
    for item in result:
        assert len(item) == 0
