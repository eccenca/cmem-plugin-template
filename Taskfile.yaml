# https://taskfile.dev
---
version: '3'

vars:
  TEMPLATE_REVISION:
    sh: git rev-parse HEAD

tasks:

  default:
    summary: |
      Just a list of documented tasks.
    silent: true
    cmds:
      - task --list

  clean:
    desc: clean up working directory
    cmds:
      - rm -rf *_dir

  create:
    desc: create a project with the current version and ask for answers
    deps:
      - clean
    cmds:
      - copier copy --vcs-ref {{.TEMPLATE_REVISION}} . new_dir

  check:generate-test-case:
    desc: generate a project with the current version from a TEST_CASE
    deps:
      - clean
    preconditions:
      - sh: "[[ -v TEST_CASE ]]"
        msg: >
          Environment needs 'TEST_CASE' variable.
          See tests directory - all yaml files without suffix are test cases.
      - sh: "[ -f tests/${TEST_CASE}.yml ]"
        msg: Test case file ${TEST_CASE}.yml does not exist.
    cmds:
      - mkdir {{.TEST_CASE}}_dir
      - cp tests/{{.TEST_CASE}}.yml {{.TEST_CASE}}_dir/.copier-answers.yml
      - copier copy --vcs-ref {{.TEMPLATE_REVISION}} --defaults . {{.TEST_CASE}}_dir
      - git config --global init.defaultBranch develop
      - git init {{.PLUGIN_DIR}}
      - cd {{.TEST_CASE}}_dir && git add .
      - cd {{.TEST_CASE}}_dir && git config init.defaultBranch main
      - cd {{.TEST_CASE}}_dir && git config user.name "Anonymous Person"
      - cd {{.TEST_CASE}}_dir && git config user.email "anonymous@example.org"
      - cd {{.TEST_CASE}}_dir && git commit -m "init from template"

  check:generate:
    desc: generate all test cases with the current template version
    deps:
      - clean
    vars:
      TEST_CASES:
        sh: find tests -type f -name '*.yml'
    cmds:
      - for: { var: TEST_CASES }
        cmd: echo {{.ITEM}}

  check:
    desc: create plugin with default answers and run check
    deps:
      - generate
    cmds:
      - cd {{.PLUGIN_DIR}} && poetry update
      - cd {{.PLUGIN_DIR}} && task check

